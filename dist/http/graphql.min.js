async function fetcher(url,options,spinner,msBeforeShowSpinner=1e3){let e,t;spinner&&(e=setTimeout(()=>{spinner.show()},msBeforeShowSpinner));try{t=await fetch(url,options)}finally{spinner&&(clearTimeout(e),spinner.hide())}return t}class GraphQL{constructor(queryURL,options={http:fetcher,tokenGetterFunction:null,expiredTokenCallback:null,spinner:null,navigateTo:null}){options={http:fetcher,tokenGetterFunction:null,expiredTokenCallback:null,spinner:null,navigateTo:null,...options},this.queryURL=queryURL,this.http=options.http,this.tokenGetterFunction=options.tokenGetterFunction,this.expiredTokenCallback=options.expiredTokenCallback,this.spinner=options.spinner,this.navigateTo=options.navigateTo}async query(query){if(!this.expiredTokenCallback||this.expiredTokenCallback(null,"/",this.navigateTo)){var n=this.tokenGetterFunction?this.tokenGetterFunction():"";query=`query {
			${query}
		}`;let e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({query:query})},t=(n&&(e.headers.Authorization="Bearer "+n),await this.http(this.queryURL,e,this.spinner));if(400!==t.status&&401!==t.status){query=await t.json();if(t.ok)return query;throw new Error(query.message)}this.expiredTokenCallback&&this.expiredTokenCallback(t,"/",this.navigateTo)}}async mutation(query){if(!this.expiredTokenCallback||this.expiredTokenCallback(null,"/",this.navigateTo)){var n=this.tokenGetterFunction?this.tokenGetterFunction():"";query=`mutation {
			${query}
		}`;let e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({query:query})},t=(n&&(e.headers.Authorization="Bearer "+n),await this.http(this.queryURL,e,this.spinner));if(400!==t.status&&401!==t.status){query=await t.json();if(t.ok)return query;throw new Error(query.message)}this.expiredTokenCallback&&this.expiredTokenCallback(t,"/",this.navigateTo)}}}export{GraphQL};