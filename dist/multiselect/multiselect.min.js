class MultiSelect extends HTMLElement{constructor(){super(),this._formSelector=this.getAttribute("form-selector"),this._fieldName=this.getAttribute("field-name"),this._outerWidth=this.getAttribute("outer-width")||"50%",this._outerStyle=this.getAttribute("outer-style")||"",this._popupWidth=this.getAttribute("popup-width")||"49%";const e=new CSSStyleSheet;e.replaceSync(`
      .multi-select-outer {
        display: flex;
        align-items: center;
        min-width: 5rem;
        width: ${this._outerWidth};
      }

      .multi-select {
        width: 100%;
        height: 2.5rem;
        border: 1px solid #ccc;
        border-radius: 0.25rem 0 0 0.25rem;
        display: flex;
        flex-wrap: nowrap;
        overflow: auto;
        gap: 0.5rem;
      }

      button.trigger-down {
        border: 1px solid black;
        background: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' viewBox='0 0 16 16'%3e%3cg fill='%23fff'%3e%3cpath d='m4.464 6.05-.707.707L8 11l4.243-4.243-.707-.707L8 9.586z'/%3e%3c/g%3e%3c/svg%3e");
        background-color: black;
        width: 2.5rem;
        height: 2.5rem;
        margin-left: auto;
        border-radius: 0 0.25rem 0.25rem 0;
      }

      .multi-select-container {
        border: 1px solid #ccc;
	      box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
        background-color: white;
        position: absolute;
        z-index: 99;
        width: ${this._popupWidth};
        padding-top: 0.8rem;
        max-height: 15rem;
        overflow-y: scroll;
      }

      .multi-select-container a {
        margin: 0.8rem;
      }

      .multi-select-container-hidden {
        display: none !important;
      }

      .tag {
        display: flex;
        align-items: center;
        gap: 0.25rem;
        cursor: pointer;
        background-color: #f5f5f5;
        color: #333;
        padding: 0.5rem;
        border-radius: 0.25rem;
        flex: 0 0 auto;
      }

      .tag-icon {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask: no-repeat center / 100%;
        mask: no-repeat center / 100%;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
      }

      .tag-icon-close {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41Z'/%3E%3C/svg%3E");
      }
    `),this._root=this.attachShadow({mode:"open"});var t=`
    <div class="multi-select-outer" style="${this._outerStyle}">
      <div class="multi-select"></div>
      <button class="trigger trigger-down"></button>
    </div>
    <div class="multi-select-container multi-select-container-hidden">
    <a href="javascript:void">Select all</a>
      <slot name="items"></slot>
    </div>
    `;this._root.adoptedStyleSheets=[e],this._root.innerHTML=t}connectedCallback(){const t=this._root.querySelector(".trigger"),l=this._root.querySelector(".multi-select-container"),i=(t.addEventListener("click",this._togglePopup.bind(this)),this._root.querySelector(".multi-select-container a").addEventListener("click",this._toggleSelectAll.bind(this)),document.addEventListener("click",e=>{this.contains(e.target)||l.classList.add("multi-select-container-hidden")}),this._getAllCheckboxEls());i.forEach(el=>{el.addEventListener("click",this._onItemClick.bind(this)),el.getAttribute("checked")&&(el.checked=!0)}),this._updateFormField(),this._updateSelectorAnchor(),this._updateSelectedList()}clear(){const e=this._getAllCheckboxEls();e.forEach(el=>el.checked=!1),this._setSelectorToSelectAll(),this._updateFormField(),this._updateSelectedList()}_togglePopup(){this._root.querySelector(".multi-select-container").classList.toggle("multi-select-container-hidden")}_toggleSelectAll(){var e=this._getSelectorText();const t=this._getAllCheckboxEls();"Select all"===e?t.forEach(el=>el.checked=!0):t.forEach(el=>el.checked=!1),this._updateFormField(),this._updateSelectorAnchor(),this._updateSelectedList()}_getAllCheckboxEls(){const e=this._root.querySelector("slot[name=items]");const t=e.assignedElements()[0];return t.querySelectorAll("li label input")}_getCheckboxElByValue(value){const e=this._root.querySelector("slot[name=items]");const t=e.assignedElements()[0];return t.querySelector(`li label input[value="${value}"]`)}_setSelectorToSelectAll(){const e=this._root.querySelector(".multi-select-container a");e.innerText="Select all"}_setSelectorToClearAll(){const e=this._root.querySelector(".multi-select-container a");e.innerText="Clear all"}_getSelectorText(){return this._root.querySelector(".multi-select-container a").innerText}_onItemClick(){this._updateFormField(),this._updateSelectedList(),this._updateSelectorAnchor()}_updateFormField(){const e=document.querySelector(this._formSelector);var t=this._getAllCheckboxEls();const l=Array.prototype.filter.call(t,el=>el.checked);document.querySelectorAll("input[type=hidden].multi-select-selected-"+this._fieldName).forEach(el=>{el.remove()}),l.forEach(el=>{el=Object.assign(document.createElement("input"),{type:"hidden",name:this._fieldName,value:el.value,className:"multi-select-selected-"+this._fieldName});e.appendChild(el)})}_updateSelectedList(){var e=this._getAllCheckboxEls();const t=Array.prototype.filter.call(e,el=>el.checked);this._root.querySelectorAll("div.multi-select > div.tag").forEach(el=>el.remove()),t.forEach(el=>{el=this._createTag(el.parentNode.innerText.trim(),el.value);this._root.querySelector("div.multi-select").appendChild(el)})}_updateSelectorAnchor(){var e=this._getAllCheckboxEls();0===Array.prototype.filter.call(e,el=>el.checked).length?this._setSelectorToSelectAll():this._setSelectorToClearAll()}_createTag(text,value){console.log(`creatig tag named "${text}" with a value of `+value);const t=Object.assign(document.createElement("div"),{className:"tag",textContent:text}),l=(t.dataset.value=value,Object.assign(document.createElement("i"),{className:"tag-icon tag-icon-close"}));return l.addEventListener("click",e=>{e.stopPropagation(),this._removeTag(value)}),t.appendChild(l),t}_removeTag(value){this._root.querySelector(`div.multi-select div[data-value="${value}"]`).remove();const e=this._getCheckboxElByValue(value);e.checked=!1,this._updateFormField(),this._updateSelectorAnchor()}}customElements.get("multi-select")||customElements.define("multi-select",MultiSelect);export{MultiSelect as default};